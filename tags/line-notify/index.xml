<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Line Notify on 彥的筆記</title>
    <link>https://wu-wenyan.github.io/tags/line-notify/</link>
    <description>Recent content in Line Notify on 彥的筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sun, 12 Nov 2023 08:36:33 +0800</lastBuildDate><atom:link href="https://wu-wenyan.github.io/tags/line-notify/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>看盤小助理之 Line Notify 即時通知</title>
      <link>https://wu-wenyan.github.io/blogs/%E7%9C%8B%E7%9B%A4%E5%B0%8F%E5%8A%A9%E7%90%86/</link>
      <pubDate>Sun, 12 Nov 2023 08:36:33 +0800</pubDate>
      
      <guid>https://wu-wenyan.github.io/blogs/%E7%9C%8B%E7%9B%A4%E5%B0%8F%E5%8A%A9%E7%90%86/</guid>
      <description>流程圖如上 小論文pdf 程式碼: #--------------------------載入模組------------------------------ import requests from bs4 import BeautifulSoup import time from datetime import datetime #--------------------------參數設定------------------------------ n_time = datetime.now() #現在時間 d_time1 = datetime.strptime(str(datetime.now().date())+&amp;#34;9:00&amp;#34;,&amp;#34;%Y-%m-%d%H:%M&amp;#34;) #開盤時間 9:00 d_time2 = datetime.strptime(str(datetime.now().date())+&amp;#34;13:30&amp;#34;,&amp;#34;%Y-%m-%d%H:%M&amp;#34;) #收盤時間 13:30 #-----Line Notify----- token = &amp;#39;sSnk6ptHXzweoZtU29YzLVoufk7CMh0pD6JF8CdCqQ5&amp;#39; #權杖代碼 #定義send_message,傳入權杖(token)和要推送的字串(msg)來達到字典型態。 def send_message(token,msg): #Line Notify 推送已post的方式提交請求，因此要定義「headers」它是字點型態 #其中一個索引key名稱「Authorization」對應的值，是由持有人(Bearer)和權杖(token)組成的字串 token = &amp;#39;sSnk6ptHXzweoZtU29YzLVoufk7CMh0pD6JF8CdCqQ5&amp;#39; haeaders = { &amp;#39;Authorization&amp;#39;:&amp;#34;Bearer &amp;#34;+token, &amp;#34;Content-Type&amp;#34;:&amp;#34;application/x-www-from-urlencoded&amp;#34; } #將要推送的訊息字串存在字典內，放進Message的索引中 payload = {&amp;#34;message&amp;#34;:msg} #以post的方式，向&amp;#39;https://notify-api.line.me/api/notify&amp;#39;提出請求 r = requests.post(&amp;#39;https://notify-api.line.me/api/notify&amp;#39;,headers = haeaders,params = payload) #可以做到例外排除，將請求的回傳用r接起，並把這個請求的執行狀態作為send_messaage函數的回傳 return r.status_code #如果請求成功 r.</description>
    </item>
    
  </channel>
</rss>
